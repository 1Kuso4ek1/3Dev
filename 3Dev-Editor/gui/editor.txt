Renderer.1 {
    TextColor = rgb(190, 190, 190);
    TextColorHover = rgb(250, 250, 250);
    Texture = "themes/Black.png" Part(50, 22, 45, 50) Middle(10, 0) Smooth;
    TextureDisabled = None;
    TextureDown = "themes/Black.png" Part(0, 74, 45, 50) Middle(10, 0) Smooth;
    TextureDownFocused = None;
    TextureDownHover = None;
    TextureFocused = "themes/Black.png" Part(47, 74, 45, 50) Middle(10, 0) Smooth;
    TextureHover = "themes/Black.png" Part(0, 126, 45, 50) Middle(10, 0) Smooth;
}

Renderer.2 {
    TextColor = rgba(255, 255, 255, 215);
    TextureBackground = None;

    Scrollbar {
        ArrowBackgroundColor = rgba(160, 160, 160, 215);
        ArrowBackgroundColorHover = rgba(170, 170, 170, 215);
        ArrowColor = rgba(200, 200, 200, 215);
        ArrowColorHover = rgba(225, 225, 225, 215);
        ThumbColor = rgba(185, 185, 185, 215);
        ThumbColorHover = rgba(195, 195, 195, 215);
        TrackColor = rgba(160, 160, 160, 215);
        TrackColorHover = rgba(170, 170, 170, 215);
    }
}

Renderer.3 {
    TextColor = rgb(190, 190, 190);
    TextureBackground = None;

    Scrollbar {
        TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
        TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
        TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
        TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
    }
}

Renderer.4 {
    BackgroundColor = rgb( 80, 80, 80);
    BorderColor = Black;
    Borders = (1, 1, 1, 1);
    DistanceToSide = 5;
    PaddingBetweenButtons = 2;
    ShowTextOnTitleButtons = false;
    TextureBackground = None;
    TextureTitleBar = "themes/Black.png" Part(0, 580, 75, 25) Middle(25, 0) Smooth;
    TitleColor = rgb(190, 190, 190);

    MaximizeButton {
        Texture = "themes/Black.png" Part(0, 330, 15, 15) Smooth;
        TextureDown = "themes/Black.png" Part(17, 330, 15, 15) Smooth;
        TextureHover = "themes/Black.png" Part(34, 330, 15, 15) Smooth;
    }

    MinimizeButton {
        Texture = "themes/Black.png" Part(81, 330, 15, 15) Smooth;
        TextureDown = "themes/Black.png" Part(98, 330, 15, 15) Smooth;
        TextureHover = "themes/Black.png" Part(0, 347, 15, 15) Smooth;
    }

    CloseButton {
        Texture = "themes/Black.png" Part(34, 212, 15, 15) Smooth;
        TextureDown = "themes/Black.png" Part(51, 212, 15, 15) Smooth;
        TextureHover = "themes/Black.png" Part(68, 212, 15, 15) Smooth;
    }
}

Renderer.5 {
}

Renderer.6 {
    CaretColor = rgb(110, 110, 255);
    DefaultTextColor = rgb(120, 120, 120);
    Padding = (6, 4, 6, 4);
    SelectedTextBackgroundColor = rgb( 10, 110, 255);
    SelectedTextColor = White;
    TextColor = rgb(190, 190, 190);
    Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
    TextureDisabled = None;
    TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
    TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
}

Renderer.7 {
    TextColor = rgb(190, 190, 190);
    TextureBackground = None;

    Scrollbar {
        TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
        TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
        TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
        TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
    }
}

Renderer.8 {
    TextureThumb = "themes/Black.png" Part(44, 499, 30, 30) Smooth;
    TextureThumbHover = None;
    TextureTrack = "themes/Black.png" Part(76, 499, 20, 45) Middle(0, 15) Smooth;
    TextureTrackHover = "themes/Black.png" Part(98, 499, 20, 45) Middle(0, 15) Smooth;
}

Renderer.9 {
    TextColor = rgb(190, 190, 190);
    TextureBackground = None;

    Scrollbar {
        TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
        TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
        TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
        TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
    }
}

Renderer.10 {
    TextColor = rgb(190, 190, 190);
    TextureBackground = None;

    Scrollbar {
        TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
        TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
        TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
        TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
    }
}

Renderer.11 {
    CaretColor = rgb(110, 110, 255);
    DefaultTextColor = rgb(120, 120, 120);
    Padding = (6, 4, 6, 4);
    SelectedTextBackgroundColor = rgb( 10, 110, 255);
    SelectedTextColor = White;
    TextColor = rgb(190, 190, 190);
    Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
    TextureDisabled = None;
    TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
    TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
}

Renderer.12 {
    TextColor = rgb(190, 190, 190);
    TextureBackground = None;

    Scrollbar {
        TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
        TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
        TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
        TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
    }
}

Renderer.13 {
    CaretColor = rgb(110, 110, 255);
    DefaultTextColor = rgb(120, 120, 120);
    Padding = (6, 4, 6, 4);
    SelectedTextBackgroundColor = rgb( 10, 110, 255);
    SelectedTextColor = White;
    TextColor = rgb(190, 190, 190);
    Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
    TextureDisabled = None;
    TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
    TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
}

Renderer.14 {
    TextColor = rgb(190, 190, 190);
    TextureBackground = None;

    Scrollbar {
        TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
        TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
        TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
        TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
    }
}

Renderer.15 {
    CaretColor = rgb(110, 110, 255);
    DefaultTextColor = rgb(120, 120, 120);
    Padding = (6, 4, 6, 4);
    SelectedTextBackgroundColor = rgb( 10, 110, 255);
    SelectedTextColor = White;
    TextColor = rgb(190, 190, 190);
    Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
    TextureDisabled = None;
    TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
    TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
}

Renderer.16 {
    CaretColor = rgb(110, 110, 255);
    DefaultTextColor = rgb(120, 120, 120);
    Padding = (6, 4, 6, 4);
    SelectedTextBackgroundColor = rgb( 10, 110, 255);
    SelectedTextColor = White;
    TextColor = rgb(190, 190, 190);
    Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
    TextureDisabled = None;
    TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
    TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
}

Renderer.17 {
    TextColor = rgb(190, 190, 190);
    TextColorHover = rgb(250, 250, 250);
    Texture = "themes/Black.png" Part(50, 22, 45, 50) Middle(10, 0) Smooth;
    TextureDisabled = None;
    TextureDown = "themes/Black.png" Part(0, 74, 45, 50) Middle(10, 0) Smooth;
    TextureDownFocused = None;
    TextureDownHover = None;
    TextureFocused = "themes/Black.png" Part(47, 74, 45, 50) Middle(10, 0) Smooth;
    TextureHover = "themes/Black.png" Part(0, 126, 45, 50) Middle(10, 0) Smooth;
}

Renderer.18 {
    TextColor = rgb(190, 190, 190);
    TextureBackground = None;

    Scrollbar {
        TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
        TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
        TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
        TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
        TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
        TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
    }
}

Renderer.19 {
    TextColor = rgb(190, 190, 190);
    TextColorHover = rgb(250, 250, 250);
    Texture = "themes/Black.png" Part(50, 22, 45, 50) Middle(10, 0) Smooth;
    TextureDisabled = None;
    TextureDown = "themes/Black.png" Part(0, 74, 45, 50) Middle(10, 0) Smooth;
    TextureDownFocused = None;
    TextureDownHover = None;
    TextureFocused = "themes/Black.png" Part(47, 74, 45, 50) Middle(10, 0) Smooth;
    TextureHover = "themes/Black.png" Part(0, 126, 45, 50) Middle(10, 0) Smooth;
}

Renderer.20 {
    TextColor = rgb(190, 190, 190);
    TextColorHover = rgb(250, 250, 250);
    Texture = "themes/Black.png" Part(50, 22, 45, 50) Middle(10, 0) Smooth;
    TextureDisabled = None;
    TextureDown = "themes/Black.png" Part(0, 74, 45, 50) Middle(10, 0) Smooth;
    TextureDownFocused = None;
    TextureDownHover = None;
    TextureFocused = "themes/Black.png" Part(47, 74, 45, 50) Middle(10, 0) Smooth;
    TextureHover = "themes/Black.png" Part(0, 126, 45, 50) Middle(10, 0) Smooth;
}

Renderer.21 {
    CaretColor = rgb(110, 110, 255);
    DefaultTextColor = rgb(120, 120, 120);
    Padding = (6, 4, 6, 4);
    SelectedTextBackgroundColor = rgb( 10, 110, 255);
    SelectedTextColor = White;
    TextColor = rgb(190, 190, 190);
    Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
    TextureDisabled = None;
    TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
    TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
}

ChildWindow.createWindow {
    PositionLocked = true;
    Size = (220, 900);
    Title = Create;
    TitleAlignment = Center;
    TitleButtons = None;
    TitleTextSize = 13;

    Renderer {
        BackgroundColor = #242424;
        BorderColor = Black;
        Borders = (1, 1, 1, 1);
        DistanceToSide = 5;
        PaddingBetweenButtons = 2;
        ShowTextOnTitleButtons = false;
        TextureBackground = None;
        TextureTitleBar = "themes/Black.png" Part(0, 580, 75, 25) Middle(25, 0) Smooth;
        TitleColor = rgb(190, 190, 190);

        MaximizeButton {
            Texture = "themes/Black.png" Part(0, 330, 15, 15) Smooth;
            TextureDown = "themes/Black.png" Part(17, 330, 15, 15) Smooth;
            TextureHover = "themes/Black.png" Part(34, 330, 15, 15) Smooth;
        }

        MinimizeButton {
            Texture = "themes/Black.png" Part(81, 330, 15, 15) Smooth;
            TextureDown = "themes/Black.png" Part(98, 330, 15, 15) Smooth;
            TextureHover = "themes/Black.png" Part(0, 347, 15, 15) Smooth;
        }

        CloseButton {
            Texture = "themes/Black.png" Part(34, 212, 15, 15) Smooth;
            TextureDown = "themes/Black.png" Part(51, 212, 15, 15) Smooth;
            TextureHover = "themes/Black.png" Part(68, 212, 15, 15) Smooth;
        }
    }

    Button.createModel {
        Position = (0, 20);
        Renderer = &1;
        Size = (220, 37);
        Text = Model;
        TextSize = 13;
    }

    Button.createShape {
        Position = (0, 60);
        Renderer = &1;
        Size = (220, 37);
        Text = Cube;
        TextSize = 13;
    }

    Button.createLight {
        Position = (0, 100);
        Renderer = &1;
        Size = (220, 37);
        Text = Light;
        TextSize = 13;
    }

    Label.Label1 {
        HorizontalAlignment = Center;
        Renderer = &2;
        Size = (218.2, 18);
        Text = Graphics;
        TextSize = 13;
    }

    Label.Label2 {
        HorizontalAlignment = Center;
        Position = (0, 180);
        Renderer = &2;
        Size = (218.2, 18);
        Text = Physics;
        TextSize = 13;
    }

    Button.boxCollider {
        Position = (0, 200);
        Renderer = &1;
        Size = (220, 37);
        Text = "Box collider";
        TextSize = 13;
    }

    Button.sphereCollider {
        Position = (0, 240);
        Renderer = &1;
        Size = (220, 37);
        Text = "Sphere collider";
        TextSize = 13;
    }

    Button.capsuleCollider {
        Position = (0, 280);
        Renderer = &1;
        Size = (220, 37);
        Text = "Capsule collider";
        TextSize = 13;
    }

    Label.Label3 {
        HorizontalAlignment = Center;
        Position = (0, 360);
        Renderer = &2;
        Size = (218.2, 18);
        Text = Sound;
        TextSize = 13;
    }

    Button.createSound {
        Position = (0, 380);
        Renderer = &1;
        Size = (220, 37);
        Text = "Sound source";
        TextSize = 13;
    }

    Button.createMaterial {
        Position = (0, 140);
        Renderer = &1;
        Size = (220, 37);
        Text = Material;
        TextSize = 13;
    }

    Label.Label10 {
        HorizontalAlignment = Center;
        Position = (0, 420);
        Renderer = &2;
        Size = (218.2, 18);
        Text = Code;
        TextSize = 13;
    }

    Button.createScript {
        Position = (0, 440);
        Renderer = &1;
        Size = (221, 37);
        Text = Script;
        TextSize = 13;
    }

    Button.concaveCollider {
        Position = (0, 320);
        Renderer = &1;
        Size = (220, 37);
        Text = "Concave collider";
        TextSize = 13;
    }

    Label.Label42 {
        AutoSize = true;
        Position = (73, 480);
        Renderer = &3;
        Size = (72, 18);
        Text = Animation;
        TextSize = 13;
    }

    Button.createAnimation {
        Position = (0, 500);
        Size = (221, 37);
        Text = Animation;
        TextSize = 13;

        Renderer {
            TextColor = rgb(190, 190, 190);
            TextColorHover = rgb(250, 250, 250);
            Texture = "themes/Black.png" Part(50, 22, 45, 50) Middle(10, 0) Smooth;
            TextureDisabled = None;
            TextureDown = "themes/Black.png" Part(0, 74, 45, 50) Middle(10, 0) Smooth;
            TextureDownFocused = None;
            TextureDownHover = None;
            TextureFocused = "themes/Black.png" Part(47, 74, 45, 50) Middle(10, 0) Smooth;
            TextureHover = "themes/Black.png" Part(0, 126, 45, 50) Middle(10, 0) Smooth;
        }
    }
}

ChildWindow.sceneTreeWindow {
    Position = (1330, 0);
    PositionLocked = true;
    Renderer = &4;
    Size = (270, 340);
    Title = Scene;
    TitleAlignment = Center;
    TitleButtons = None;
    TitleTextSize = 13;

    TreeView.scene {
        ItemHeight = 20;
        Size = (270, 100%);
        TextSize = 13;

        Renderer {
            BackgroundColorHover = rgb(100, 100, 100);
            Padding = (3, 3, 3, 3);
            SelectedBackgroundColor = rgb( 10, 110, 255);
            SelectedBackgroundColorHover = rgb(30, 150, 255);
            SelectedTextColor = White;
            TextColor = rgb(190, 190, 190);
            TextColorHover = rgb(250, 250, 250);
            TextureBackground = "themes/Black.png" Part(0, 22, 48, 48) Middle(16) Smooth;
            TextureBranchCollapsed = None;
            TextureBranchExpanded = None;
            TextureLeaf = None;

            Scrollbar {
                TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
            }
        }
    }
}

ChildWindow.objectEditorWindow {
    Position = (1330, 340);
    PositionLocked = true;
    Size = (270, 560);
    Title = "Properties editor";
    TitleAlignment = Center;
    TitleButtons = None;
    TitleTextSize = 13;

    Renderer {
        BackgroundColor = #242424;
        BorderColor = Black;
        Borders = (1, 1, 1, 1);
        DistanceToSide = 5;
        PaddingBetweenButtons = 2;
        ShowTextOnTitleButtons = false;
        TextureBackground = None;
        TextureTitleBar = "themes/Black.png" Part(0, 580, 75, 25) Middle(25, 0) Smooth;
        TitleColor = rgb(190, 190, 190);

        MaximizeButton {
            Texture = "themes/Black.png" Part(0, 330, 15, 15) Smooth;
            TextureDown = "themes/Black.png" Part(17, 330, 15, 15) Smooth;
            TextureHover = "themes/Black.png" Part(34, 330, 15, 15) Smooth;
        }

        MinimizeButton {
            Texture = "themes/Black.png" Part(81, 330, 15, 15) Smooth;
            TextureDown = "themes/Black.png" Part(98, 330, 15, 15) Smooth;
            TextureHover = "themes/Black.png" Part(0, 347, 15, 15) Smooth;
        }

        CloseButton {
            Texture = "themes/Black.png" Part(34, 212, 15, 15) Smooth;
            TextureDown = "themes/Black.png" Part(51, 212, 15, 15) Smooth;
            TextureHover = "themes/Black.png" Part(68, 212, 15, 15) Smooth;
        }
    }

    Group.objectEditor {
        Enabled = false;
        Position = (10, 10);
        Renderer = &5;
        Size = (250, 420);
        Visible = false;

        EditBox.name {
            Renderer = &6;
            Size = (250, 24);
            TextSize = 13;
        }

        EditBox.posX {
            DefaultText = 0;
            InputValidator = Float;
            Position = (0, 30);
            Renderer = &6;
            Size = (60, 24);
            TextSize = 13;
        }

        EditBox.posY {
            DefaultText = 0;
            InputValidator = Float;
            Position = (70, 30);
            Renderer = &6;
            Size = (60, 24);
            TextSize = 13;
        }

        EditBox.posZ {
            DefaultText = 0;
            InputValidator = Float;
            Position = (140, 30);
            Renderer = &6;
            Size = (60, 24);
            TextSize = 13;
        }

        Label.Label4 {
            HorizontalAlignment = Center;
            Position = (190, 32);
            Renderer = &7;
            Size = (68.2, 18);
            Text = pos;
            TextSize = 13;
        }

        EditBox.rotX {
            DefaultText = 0;
            InputValidator = Float;
            Position = (0, 60);
            Renderer = &6;
            Size = (60, 24);
            TextSize = 13;
        }

        EditBox.rotY {
            DefaultText = 0;
            InputValidator = Float;
            Position = (70, 60);
            Renderer = &6;
            Size = (60, 24);
            TextSize = 13;
        }

        EditBox.rotZ {
            DefaultText = 0;
            InputValidator = Float;
            Position = (140, 60);
            Renderer = &6;
            Size = (60, 24);
            TextSize = 13;
        }

        Label.Label5 {
            HorizontalAlignment = Center;
            Position = (190, 62);
            Renderer = &7;
            Size = (68.2, 18);
            Text = rot;
            TextSize = 13;
        }

        EditBox.sizeX {
            DefaultText = 1;
            InputValidator = Float;
            Position = (0, 90);
            Renderer = &6;
            Size = (60, 24);
            TextSize = 13;
        }

        EditBox.sizeY {
            DefaultText = 1;
            InputValidator = Float;
            Position = (70, 90);
            Renderer = &6;
            Size = (60, 24);
            TextSize = 13;
        }

        EditBox.sizeZ {
            DefaultText = 1;
            InputValidator = Float;
            Position = (140, 90);
            Renderer = &6;
            Size = (60, 24);
            TextSize = 13;
        }

        Label.Label6 {
            HorizontalAlignment = Center;
            Position = (190, 92);
            Renderer = &7;
            Size = (68.2, 18);
            Text = size;
            TextSize = 13;
        }

        Button.openFile {
            Position = (0, 330);
            Renderer = &1;
            Text = "Open file";
            TextSize = 13;
        }

        ListBox.materials {
            ItemHeight = 20;
            Items = [default];
            MaximumItems = 0;
            Position = (0, 120);
            Size = (250, 92);
            TextSize = 13;

            Renderer {
                BackgroundColorHover = rgb(100, 100, 100);
                Padding = (3, 3, 3, 3);
                SelectedBackgroundColor = rgb( 10, 110, 255);
                SelectedBackgroundColorHover = rgb(30, 150, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                TextureBackground = "themes/Black.png" Part(0, 22, 48, 48) Middle(16) Smooth;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        ComboBox.material {
            ChangeItemOnScroll = false;
            ItemsToDisplay = 0;
            MaximumItems = 0;
            Position = (0, 220);
            Size = (250, 24);
            TextSize = 13;

            Renderer {
                Padding = (3, 3, 3, 3);
                TextColor = rgb(190, 190, 190);
                TextureArrow = "themes/Black.png" Part(85, 212, 32, 32) Smooth;
                TextureArrowDisabled = None;
                TextureArrowHover = "themes/Black.png" Part(0, 246, 32, 32) Smooth;
                TextureBackground = "themes/Black.png" Part(0, 22, 48, 48) Middle(16) Smooth;
                TextureBackgroundDisabled = None;

                ListBox {
                    BackgroundColorHover = rgb(100, 100, 100);
                    Padding = (3, 3, 3, 3);
                    SelectedBackgroundColor = rgb( 10, 110, 255);
                    SelectedBackgroundColorHover = rgb(30, 150, 255);
                    SelectedTextColor = White;
                    TextColor = rgb(190, 190, 190);
                    TextColorHover = rgb(250, 250, 250);
                    TextureBackground = "themes/Black.png" Part(0, 22, 48, 48) Middle(16) Smooth;

                    Scrollbar {
                        TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                        TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                        TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                        TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                        TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                        TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                        TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                        TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                    }
                }
            }
        }

        Button.delete {
            Position = (0, 356);
            Renderer = &1;
            Size = (74, 20);
            Text = Delete;
            TextSize = 13;
        }

        Label.Label13 {
            AutoSize = true;
            Position = (0, 254);
            Size = (69, 18);
            Text = "Body type";
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        ComboBox.bodyType {
            ChangeItemOnScroll = false;
            Items = [STATIC, KINEMATIC, DYNAMIC];
            ItemsToDisplay = 0;
            MaximumItems = 0;
            Position = (80, 253);
            SelectedItemIndex = 2;
            Size = (120, 22);
            TextSize = 13;

            Renderer {
                Padding = (3, 3, 3, 3);
                TextColor = rgb(190, 190, 190);
                TextureArrow = "themes/Black.png" Part(85, 212, 32, 32) Smooth;
                TextureArrowDisabled = None;
                TextureArrowHover = "themes/Black.png" Part(0, 246, 32, 32) Smooth;
                TextureBackground = "themes/Black.png" Part(0, 22, 48, 48) Middle(16) Smooth;
                TextureBackgroundDisabled = None;

                ListBox {
                    BackgroundColorHover = rgb(100, 100, 100);
                    Padding = (3, 3, 3, 3);
                    SelectedBackgroundColor = rgb( 10, 110, 255);
                    SelectedBackgroundColorHover = rgb(30, 150, 255);
                    SelectedTextColor = White;
                    TextColor = rgb(190, 190, 190);
                    TextColorHover = rgb(250, 250, 250);
                    TextureBackground = "themes/Black.png" Part(0, 22, 48, 48) Middle(16) Smooth;

                    Scrollbar {
                        TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                        TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                        TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                        TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                        TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                        TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                        TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                        TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                    }
                }
            }
        }

        CheckBox.isDrawable {
            Checked = true;
            Position = (80, 283);
            Size = (18, 18);
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                TextureChecked = "themes/Black.png" Part(47, 126, 32, 32) Smooth;
                TextureCheckedDisabled = None;
                TextureCheckedFocused = "themes/Black.png" Part(81, 126, 32, 32) Smooth;
                TextureCheckedHover = "themes/Black.png" Part(0, 178, 32, 32) Smooth;
                TextureUnchecked = "themes/Black.png" Part(34, 178, 32, 32) Smooth;
                TextureUncheckedDisabled = None;
                TextureUncheckedFocused = "themes/Black.png" Part(68, 178, 32, 32) Smooth;
                TextureUncheckedHover = "themes/Black.png" Part(0, 212, 32, 32) Smooth;
            }
        }

        Label.Label19 {
            AutoSize = true;
            Position = (0, 282);
            Size = (66, 18);
            Text = Drawable;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        Button.reload {
            Position = (80, 330);
            Text = Reload;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                Texture = "themes/Black.png" Part(50, 22, 45, 50) Middle(10, 0) Smooth;
                TextureDisabled = None;
                TextureDown = "themes/Black.png" Part(0, 74, 45, 50) Middle(10, 0) Smooth;
                TextureDownFocused = None;
                TextureDownHover = None;
                TextureFocused = "themes/Black.png" Part(47, 74, 45, 50) Middle(10, 0) Smooth;
                TextureHover = "themes/Black.png" Part(0, 126, 45, 50) Middle(10, 0) Smooth;
            }
        }

        Label.Label48 {
            AutoSize = true;
            Position = (0, 302);
            Size = (129, 18);
            Text = "Immediate loading";
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        CheckBox.immLoad {
            Checked = true;
            Position = (140, 303);
            Size = (18, 18);
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                TextureChecked = "themes/Black.png" Part(47, 126, 32, 32) Smooth;
                TextureCheckedDisabled = None;
                TextureCheckedFocused = "themes/Black.png" Part(81, 126, 32, 32) Smooth;
                TextureCheckedHover = "themes/Black.png" Part(0, 178, 32, 32) Smooth;
                TextureUnchecked = "themes/Black.png" Part(34, 178, 32, 32) Smooth;
                TextureUncheckedDisabled = None;
                TextureUncheckedFocused = "themes/Black.png" Part(68, 178, 32, 32) Smooth;
                TextureUncheckedHover = "themes/Black.png" Part(0, 212, 32, 32) Smooth;
            }
        }
    }

    Group.materialEditor {
        Position = (10, 10);
        Renderer = &5;
        Size = (250, 510);

        Slider.metal {
            ChangeValueOnScroll = true;
            InvertedDirection = false;
            Maximum = 1;
            Minimum = 0;
            Position = (20, 110);
            Renderer = &8;
            Size = (185, 16);
            Step = 0.01;
            Value = 0;
        }

        Slider.rough {
            ChangeValueOnScroll = true;
            InvertedDirection = false;
            Maximum = 1;
            Minimum = 0;
            Position = (20, 190);
            Renderer = &8;
            Size = (185, 16);
            Step = 0.01;
            Value = 0;
        }

        EditBox.mtlbox {
            InputValidator = Float;
            Position = (210, 106);
            Renderer = &6;
            Size = (40, 22);
            Text = "0.0";
            TextSize = 13;
        }

        EditBox.rghbox {
            InputValidator = Float;
            Position = (210, 186);
            Renderer = &6;
            Size = (40, 22);
            Text = "0.0";
            TextSize = 13;
        }

        Label.Label7 {
            HorizontalAlignment = Center;
            Position = (30, 30);
            Renderer = &7;
            Size = (188.2, 18);
            Text = Color;
            TextSize = 13;
        }

        Label.Label8 {
            HorizontalAlignment = Center;
            Position = (30, 85);
            Renderer = &7;
            Size = (188.2, 18);
            Text = Metalness;
            TextSize = 13;
        }

        Label.Label9 {
            HorizontalAlignment = Center;
            Position = (30, 165);
            Renderer = &7;
            Size = (188.2, 18);
            Text = Roughness;
            TextSize = 13;
        }

        EditBox.matName {
            Renderer = &6;
            Size = (250, 24);
            TextSize = 13;
        }

        Button.colorPicker {
            Position = (0, 50);
            Renderer = &1;
            Size = (116, 20);
            Text = "Pick...";
            TextSize = 13;
        }

        Button.loadMetalness {
            Position = (65, 132);
            Renderer = &1;
            Size = (116, 20);
            Text = "Load texture...";
            TextSize = 13;
        }

        Button.loadRoughness {
            Position = (65, 212);
            Renderer = &1;
            Size = (116, 20);
            Text = "Load texture...";
            TextSize = 13;
        }

        Button.loadColor {
            Position = (132, 50);
            Renderer = &1;
            Size = (116, 20);
            Text = "Load texture...";
            TextSize = 13;
        }

        Label.Label15 {
            HorizontalAlignment = Center;
            Position = (30, 245);
            Renderer = &7;
            Size = (188.2, 18);
            Text = Normal;
            TextSize = 13;
        }

        Button.loadNormal {
            Position = (65, 265);
            Renderer = &1;
            Size = (116, 20);
            Text = "Load texture...";
            TextSize = 13;
        }

        Label.Label16 {
            HorizontalAlignment = Center;
            Position = (30, 297);
            Renderer = &7;
            Size = (188.2, 18);
            Text = "Ambient occlusion";
            TextSize = 13;
        }

        Button.loadAo {
            Position = (65, 317);
            Renderer = &1;
            Size = (116, 20);
            Text = "Load texture...";
            TextSize = 13;
        }

        Label.Label17 {
            HorizontalAlignment = Center;
            Position = (30, 349);
            Renderer = &7;
            Size = (188.2, 18);
            Text = Emission;
            TextSize = 13;
        }

        Button.loadEmission {
            Position = (132, 369);
            Renderer = &1;
            Size = (116, 20);
            Text = "Load texture...";
            TextSize = 13;
        }

        Label.Label18 {
            HorizontalAlignment = Center;
            Position = (30, 421);
            Renderer = &7;
            Size = (188.2, 18);
            Text = Opacity;
            TextSize = 13;
        }

        Slider.opacity {
            ChangeValueOnScroll = true;
            InvertedDirection = false;
            Maximum = 1;
            Minimum = 0;
            Position = (20, 442);
            Renderer = &8;
            Size = (185, 16);
            Step = 0.01;
            Value = 0;
        }

        EditBox.opcbox {
            InputValidator = Float;
            Position = (210, 436);
            Renderer = &6;
            Size = (40, 22);
            Text = "0.0";
            TextSize = 13;
        }

        Button.loadOpacity {
            Position = (65, 465);
            Renderer = &1;
            Size = (116, 20);
            Text = "Load texture...";
            TextSize = 13;
        }

        Button.emissionPicker {
            Position = (0, 370);
            Renderer = &1;
            Size = (116, 20);
            Text = "Pick...";
            TextSize = 13;
        }

        EditBox.emissionStrength {
            InputValidator = Float;
            Position = (130, 396);
            Size = (120, 22);
            Text = "0.0";
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        Label.Label45 {
            HorizontalAlignment = Center;
            Position = (0, 398);
            Size = (106, 18);
            Text = Strength;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }
    }

    Group.scriptsGroup {
        Enabled = false;
        Position = (10, 10);
        Renderer = &5;
        Size = (250, 360);
        Visible = false;

        Label.Label11 {
            AutoSize = true;
            Position = (95, 0);
            Renderer = &7;
            Size = (48, 18);
            Text = Scripts;
            TextSize = 13;
        }

        Button.build {
            Position = (0, 22);
            Renderer = &1;
            Text = Build;
            TextSize = 13;
        }

        Button.startStop {
            Position = (0, 50);
            Renderer = &1;
            Text = "Start / stop";
            TextSize = 13;
        }

        Button.removeScript {
            Position = (0, 298);
            Renderer = &1;
            Text = "Remove script";
            TextSize = 13;
        }

        Label.Label12 {
            AutoSize = true;
            Position = (87, 80);
            Renderer = &7;
            Size = (64, 18);
            Text = Variables;
            TextSize = 13;
        }

        EditBox.value {
            Position = (0, 241);
            Renderer = &6;
            Size = (149, 22);
            TextSize = 13;
        }

        ListBox.variables {
            ItemHeight = 20;
            MaximumItems = 0;
            Position = (0, 100);
            Size = (250, 132);
            TextSize = 13;

            Renderer {
                BackgroundColorHover = rgb(100, 100, 100);
                Padding = (3, 3, 3, 3);
                SelectedBackgroundColor = rgb( 10, 110, 255);
                SelectedBackgroundColorHover = rgb(30, 150, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                TextureBackground = "themes/Black.png" Part(0, 22, 48, 48) Middle(16) Smooth;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        Button.setValue {
            Position = (160, 241);
            Size = (81, 22);
            Text = "Set value";
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                Texture = "themes/Black.png" Part(50, 22, 45, 50) Middle(10, 0) Smooth;
                TextureDisabled = None;
                TextureDown = "themes/Black.png" Part(0, 74, 45, 50) Middle(10, 0) Smooth;
                TextureDownFocused = None;
                TextureDownHover = None;
                TextureFocused = "themes/Black.png" Part(47, 74, 45, 50) Middle(10, 0) Smooth;
                TextureHover = "themes/Black.png" Part(0, 126, 45, 50) Middle(10, 0) Smooth;
            }
        }

        Button.editScript {
            Position = (0, 270);
            Text = "Edit script";
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                Texture = "themes/Black.png" Part(50, 22, 45, 50) Middle(10, 0) Smooth;
                TextureDisabled = None;
                TextureDown = "themes/Black.png" Part(0, 74, 45, 50) Middle(10, 0) Smooth;
                TextureDownFocused = None;
                TextureDownHover = None;
                TextureFocused = "themes/Black.png" Part(47, 74, 45, 50) Middle(10, 0) Smooth;
                TextureHover = "themes/Black.png" Part(0, 126, 45, 50) Middle(10, 0) Smooth;
            }
        }
    }

    Group.sceneGroup {
        Position = (10, 10);
        Renderer = &5;
        Size = (250, 260);
        Visible = false;

        Label.Label14 {
            HorizontalAlignment = Center;
            Position = (83, 0);
            Renderer = &7;
            Size = (72.2, 18);
            Text = Scene;
            TextSize = 13;
        }

        Button.save {
            Position = (90, 50);
            Renderer = &1;
            Size = (58, 20);
            Text = Save;
            TextSize = 13;
        }

        EditBox.filename {
            Position = (0, 20);
            Renderer = &6;
            Size = (200, 24);
            TextSize = 13;
        }

        Button.openFileDialog {
            Position = (210, 20);
            Renderer = &1;
            Size = (31, 22);
            Text = "...";
            TextSize = 13;
        }
    }

    Group.lightEditor {
        Enabled = false;
        Position = (10, 10);
        Renderer = &5;
        Size = (250, 430);
        Visible = false;

        EditBox.lightName {
            Size = (250, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.lposX {
            DefaultText = 0;
            InputValidator = Float;
            Position = (0, 30);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.lposY {
            DefaultText = 0;
            InputValidator = Float;
            Position = (75, 30);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.lposZ {
            DefaultText = 0;
            InputValidator = Float;
            Position = (150, 30);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        Label.Label20 {
            HorizontalAlignment = Center;
            Position = (200, 32);
            Size = (68.2, 18);
            Text = pos;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        EditBox.lrotX {
            DefaultText = 0;
            InputValidator = Float;
            Position = (0, 60);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.lrotY {
            DefaultText = 0;
            InputValidator = Float;
            Position = (75, 60);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.lrotZ {
            DefaultText = 0;
            InputValidator = Float;
            Position = (150, 60);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        Label.Label21 {
            HorizontalAlignment = Center;
            Position = (200, 62);
            Size = (68.2, 18);
            Text = rot;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        Label.Label22 {
            AutoSize = true;
            Position = (101, 90);
            Renderer = &9;
            Size = (38, 18);
            Text = Color;
            TextSize = 13;
        }

        Label.Label23 {
            AutoSize = true;
            Position = (80, 137);
            Renderer = &9;
            Size = (80, 18);
            Text = Attenuation;
            TextSize = 13;
        }

        Label.Label24 {
            AutoSize = true;
            Position = (0, 163);
            Renderer = &9;
            Size = (64, 18);
            Text = Constant;
            TextSize = 13;
        }

        Label.Label25 {
            AutoSize = true;
            Position = (0, 193);
            Renderer = &10;
            Size = (46, 18);
            Text = Linear;
            TextSize = 13;
        }

        Label.Label26 {
            AutoSize = true;
            Position = (0, 223);
            Renderer = &10;
            Size = (68, 18);
            Text = Quadratic;
            TextSize = 13;
        }

        EditBox.constAtt {
            DefaultText = 1;
            InputValidator = Float;
            Position = (170, 160);
            Size = (70, 22);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.linAtt {
            DefaultText = 0;
            InputValidator = Float;
            Position = (170, 190);
            Renderer = &11;
            Size = (70, 22);
            TextSize = 13;
        }

        EditBox.quadAtt {
            DefaultText = 0;
            InputValidator = Float;
            Position = (170, 220);
            Renderer = &11;
            Size = (70, 22);
            TextSize = 13;
        }

        Button.ldelete {
            Position = (0, 400);
            Size = (74, 22);
            Text = Delete;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                Texture = "themes/Black.png" Part(50, 22, 45, 50) Middle(10, 0) Smooth;
                TextureDisabled = None;
                TextureDown = "themes/Black.png" Part(0, 74, 45, 50) Middle(10, 0) Smooth;
                TextureDownFocused = None;
                TextureDownHover = None;
                TextureFocused = "themes/Black.png" Part(47, 74, 45, 50) Middle(10, 0) Smooth;
                TextureHover = "themes/Black.png" Part(0, 126, 45, 50) Middle(10, 0) Smooth;
            }
        }

        CheckBox.castShadows {
            Position = (150, 355);
            Size = (18, 18);
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                TextureChecked = "themes/Black.png" Part(47, 126, 32, 32) Smooth;
                TextureCheckedDisabled = None;
                TextureCheckedFocused = "themes/Black.png" Part(81, 126, 32, 32) Smooth;
                TextureCheckedHover = "themes/Black.png" Part(0, 178, 32, 32) Smooth;
                TextureUnchecked = "themes/Black.png" Part(34, 178, 32, 32) Smooth;
                TextureUncheckedDisabled = None;
                TextureUncheckedFocused = "themes/Black.png" Part(68, 178, 32, 32) Smooth;
                TextureUncheckedHover = "themes/Black.png" Part(0, 212, 32, 32) Smooth;
            }
        }

        Label.Label27 {
            AutoSize = true;
            Position = (0, 355);
            Renderer = &12;
            Size = (94, 18);
            Text = "Cast shadows";
            TextSize = 13;
        }

        Label.Label28 {
            AutoSize = true;
            Position = (90, 330);
            Renderer = &12;
            Size = (62, 18);
            Text = Shadows;
            TextSize = 13;
        }

        EditBox.r {
            DefaultText = 0;
            InputValidator = Float;
            Position = (0, 110);
            Renderer = &13;
            Size = (60, 24);
            TextSize = 13;
        }

        EditBox.g {
            DefaultText = 0;
            InputValidator = Float;
            Position = (75, 110);
            Renderer = &13;
            Size = (60, 24);
            TextSize = 13;
        }

        EditBox.b {
            DefaultText = 0;
            InputValidator = Float;
            Position = (150, 110);
            Renderer = &13;
            Size = (60, 24);
            TextSize = 13;
        }

        Label.Label29 {
            HorizontalAlignment = Center;
            Position = (200, 112);
            Size = (68.2, 18);
            Text = rgb;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        Label.Label30 {
            AutoSize = true;
            Position = (100, 247);
            Renderer = &14;
            Size = (45, 18);
            Text = Cutoff;
            TextSize = 13;
        }

        Label.Label31 {
            AutoSize = true;
            Position = (0, 272);
            Renderer = &14;
            Size = (39, 18);
            Text = Inner;
            TextSize = 13;
        }

        Label.Label32 {
            AutoSize = true;
            Position = (0, 303);
            Renderer = &14;
            Size = (42, 18);
            Text = Outer;
            TextSize = 13;
        }

        EditBox.innerCutoff {
            DefaultText = 0;
            InputValidator = Float;
            Position = (170, 270);
            Renderer = &15;
            Size = (70, 22);
            TextSize = 13;
        }

        EditBox.outerCutoff {
            DefaultText = 0;
            InputValidator = Float;
            Position = (170, 300);
            Renderer = &15;
            Size = (70, 22);
            TextSize = 13;
        }

        Label.Label38 {
            AutoSize = true;
            Position = (0, 375);
            Size = (140, 18);
            Text = "Perspective shadows";
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        CheckBox.perspectiveShadows {
            Position = (150, 375);
            Size = (18, 18);
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                TextureChecked = "themes/Black.png" Part(47, 126, 32, 32) Smooth;
                TextureCheckedDisabled = None;
                TextureCheckedFocused = "themes/Black.png" Part(81, 126, 32, 32) Smooth;
                TextureCheckedHover = "themes/Black.png" Part(0, 178, 32, 32) Smooth;
                TextureUnchecked = "themes/Black.png" Part(34, 178, 32, 32) Smooth;
                TextureUncheckedDisabled = None;
                TextureUncheckedFocused = "themes/Black.png" Part(68, 178, 32, 32) Smooth;
                TextureUncheckedHover = "themes/Black.png" Part(0, 212, 32, 32) Smooth;
            }
        }
    }

    Group.soundEditor {
        Enabled = false;
        Position = (10, 10);
        Renderer = &5;
        Size = (260, 420);
        Visible = false;

        EditBox.soundName {
            Size = (250, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.sposX {
            DefaultText = 0;
            InputValidator = Float;
            Position = (0, 30);
            Renderer = &16;
            Size = (60, 24);
            TextSize = 13;
        }

        EditBox.sposY {
            DefaultText = 0;
            InputValidator = Float;
            Position = (75, 30);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.sposZ {
            DefaultText = 0;
            InputValidator = Float;
            Position = (150, 30);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        Label.Label33 {
            HorizontalAlignment = Center;
            Position = (200, 32);
            Size = (68.2, 18);
            Text = pos;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        Button.sdelete {
            Position = (0, 266);
            Renderer = &17;
            Size = (74, 20);
            Text = Delete;
            TextSize = 13;
        }

        Button.play {
            Position = (0, 216);
            Renderer = &17;
            Size = (70, 20);
            Text = Play;
            TextSize = 13;
        }

        Button.pause {
            Position = (90, 216);
            Renderer = &17;
            Size = (70, 20);
            Text = Pause;
            TextSize = 13;
        }

        Button.stop {
            Position = (180, 216);
            Renderer = &17;
            Size = (70, 20);
            Text = Stop;
            TextSize = 13;
        }

        CheckBox.loop {
            Position = (46, 190);
            Size = (18, 18);
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                TextureChecked = "themes/Black.png" Part(47, 126, 32, 32) Smooth;
                TextureCheckedDisabled = None;
                TextureCheckedFocused = "themes/Black.png" Part(81, 126, 32, 32) Smooth;
                TextureCheckedHover = "themes/Black.png" Part(0, 178, 32, 32) Smooth;
                TextureUnchecked = "themes/Black.png" Part(34, 178, 32, 32) Smooth;
                TextureUncheckedDisabled = None;
                TextureUncheckedFocused = "themes/Black.png" Part(68, 178, 32, 32) Smooth;
                TextureUncheckedHover = "themes/Black.png" Part(0, 212, 32, 32) Smooth;
            }
        }

        Label.Label34 {
            AutoSize = true;
            Position = (0, 190);
            Renderer = &18;
            Size = (34, 18);
            Text = Loop;
            TextSize = 13;
        }

        Label.Label35 {
            AutoSize = true;
            Position = (100, 64);
            Renderer = &18;
            Size = (54, 18);
            Text = Volume;
            TextSize = 13;
        }

        Slider.volume {
            ChangeValueOnScroll = true;
            InvertedDirection = false;
            Maximum = 100;
            Minimum = 0;
            Position = (13, 90);
            Size = (223, 16);
            Step = 1;
            Value = 100;

            Renderer {
                TextureThumb = "themes/Black.png" Part(44, 499, 30, 30) Smooth;
                TextureThumbHover = None;
                TextureTrack = "themes/Black.png" Part(76, 499, 20, 45) Middle(0, 15) Smooth;
                TextureTrackHover = "themes/Black.png" Part(98, 499, 20, 45) Middle(0, 15) Smooth;
            }
        }

        Label.Label36 {
            AutoSize = true;
            Position = (0, 124);
            Renderer = &18;
            Size = (80, 18);
            Text = Attenuation;
            TextSize = 13;
        }

        Label.Label37 {
            AutoSize = true;
            Position = (0, 154);
            Size = (87, 18);
            Text = "Min distance";
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        EditBox.attenuation {
            DefaultText = 0;
            InputValidator = Float;
            Position = (190, 120);
            Renderer = &16;
            Size = (60, 24);
            TextSize = 13;
        }

        EditBox.minDist {
            DefaultText = 0;
            InputValidator = Float;
            Position = (190, 150);
            Renderer = &16;
            Size = (60, 24);
            TextSize = 13;
        }
    }

    Group.boneEditor {
        Enabled = false;
        Position = (10, 10);
        Renderer = &5;
        Size = (250, 420);
        Visible = false;

        EditBox.bposX {
            DefaultText = 0;
            InputValidator = Float;
            Position = (0, 30);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.bposY {
            DefaultText = 0;
            InputValidator = Float;
            Position = (75, 30);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.bposZ {
            DefaultText = 0;
            InputValidator = Float;
            Position = (150, 30);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        Label.Label39 {
            HorizontalAlignment = Center;
            Position = (200, 32);
            Size = (68.2, 18);
            Text = pos;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        EditBox.brotX {
            DefaultText = 0;
            InputValidator = Float;
            Position = (0, 60);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.brotY {
            DefaultText = 0;
            InputValidator = Float;
            Position = (75, 60);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.brotZ {
            DefaultText = 0;
            InputValidator = Float;
            Position = (150, 60);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        Label.Label40 {
            HorizontalAlignment = Center;
            Position = (200, 62);
            Size = (68.2, 18);
            Text = rot;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        EditBox.bsizeX {
            DefaultText = 1;
            InputValidator = Float;
            Position = (0, 90);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.bsizeY {
            DefaultText = 1;
            InputValidator = Float;
            Position = (75, 90);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        EditBox.bsizeZ {
            DefaultText = 1;
            InputValidator = Float;
            Position = (150, 90);
            Size = (60, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        Label.Label41 {
            HorizontalAlignment = Center;
            Position = (200, 92);
            Size = (68.2, 18);
            Text = size;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        EditBox.boneName {
            Size = (250, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }
    }

    Group.animationEditor {
        Enabled = false;
        Position = (10, 10);
        Renderer = &5;
        Size = (250, 420);
        Visible = false;

        EditBox.animName {
            Size = (250, 24);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        Button.aplay {
            Position = (0, 90);
            Renderer = &19;
            Size = (70, 20);
            Text = Play;
            TextSize = 13;
        }

        Button.apause {
            Position = (90, 90);
            Renderer = &19;
            Size = (60, 20);
            Text = Pause;
            TextSize = 13;
        }

        EditBox.duration {
            DefaultText = 0;
            InputValidator = Float;
            Position = (0, 30);
            Size = (60, 22);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        Label.Label46 {
            AutoSize = true;
            Position = (70, 33);
            Renderer = &3;
            Size = (60, 18);
            Text = duration;
            TextSize = 13;
        }

        EditBox.tps {
            DefaultText = 30;
            InputValidator = Float;
            Position = (0, 60);
            Size = (60, 22);
            TextSize = 13;

            Renderer {
                CaretColor = rgb(110, 110, 255);
                DefaultTextColor = rgb(120, 120, 120);
                Padding = (6, 4, 6, 4);
                SelectedTextBackgroundColor = rgb( 10, 110, 255);
                SelectedTextColor = White;
                TextColor = rgb(190, 190, 190);
                Texture = "themes/Black.png" Part(34, 246, 60, 40) Middle(15, 0) Smooth;
                TextureDisabled = None;
                TextureFocused = "themes/Black.png" Part(0, 288, 60, 40) Middle(15, 0) Smooth;
                TextureHover = "themes/Black.png" Part(62, 288, 60, 40) Middle(15, 0) Smooth;
            }
        }

        Label.Label47 {
            AutoSize = true;
            Position = (70, 63);
            Renderer = &3;
            Size = (24, 18);
            Text = tps;
            TextSize = 13;
        }

        Button.addKf {
            Position = (170, 120);
            Renderer = &20;
            Size = (68, 20);
            Text = "Add kf";
            TextSize = 13;
        }

        EditBox.kfName {
            Position = (0, 120);
            Renderer = &21;
            Size = (160, 22);
            TextSize = 13;
        }

        Slider.timeline {
            ChangeValueOnScroll = true;
            InvertedDirection = false;
            Maximum = 10;
            Minimum = 0;
            Position = (20, 170);
            Size = (170, 16);
            Step = 0.1;
            Value = 0;

            Renderer {
                TextureThumb = "themes/Black.png" Part(44, 499, 30, 30) Smooth;
                TextureThumbHover = None;
                TextureTrack = "themes/Black.png" Part(76, 499, 20, 45) Middle(0, 15) Smooth;
                TextureTrackHover = "themes/Black.png" Part(98, 499, 20, 45) Middle(0, 15) Smooth;
            }
        }

        Label.Label43 {
            AutoSize = true;
            Position = (70, 147);
            Size = (61, 18);
            Text = Timeline;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        EditBox.time {
            Position = (200, 166);
            Renderer = &21;
            Size = (40, 22);
            TextSize = 13;
        }

        Button.addAction {
            Position = (0, 220);
            Renderer = &20;
            Size = (90, 20);
            Text = "Add action";
            TextSize = 13;
        }

        Button.astop {
            Position = (170, 90);
            Size = (70, 20);
            Text = Stop;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                Texture = "themes/Black.png" Part(50, 22, 45, 50) Middle(10, 0) Smooth;
                TextureDisabled = None;
                TextureDown = "themes/Black.png" Part(0, 74, 45, 50) Middle(10, 0) Smooth;
                TextureDownFocused = None;
                TextureDownHover = None;
                TextureFocused = "themes/Black.png" Part(47, 74, 45, 50) Middle(10, 0) Smooth;
                TextureHover = "themes/Black.png" Part(0, 126, 45, 50) Middle(10, 0) Smooth;
            }
        }

        Button.deleteAnimOrKF {
            Position = (0, 250);
            Size = (130, 20);
            Text = "Delete keyframe";
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                Texture = "themes/Black.png" Part(50, 22, 45, 50) Middle(10, 0) Smooth;
                TextureDisabled = None;
                TextureDown = "themes/Black.png" Part(0, 74, 45, 50) Middle(10, 0) Smooth;
                TextureDownFocused = None;
                TextureDownHover = None;
                TextureFocused = "themes/Black.png" Part(47, 74, 45, 50) Middle(10, 0) Smooth;
                TextureHover = "themes/Black.png" Part(0, 126, 45, 50) Middle(10, 0) Smooth;
            }
        }

        Label.Label44 {
            AutoSize = true;
            Position = (0, 195);
            Size = (50, 18);
            Text = Repeat;
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextureBackground = None;

                Scrollbar {
                    TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                    TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                    TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                    TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                    TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                    TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
                }
            }
        }

        CheckBox.repeat {
            Position = (60, 195);
            Size = (18, 18);
            TextSize = 13;

            Renderer {
                TextColor = rgb(190, 190, 190);
                TextColorHover = rgb(250, 250, 250);
                TextureChecked = "themes/Black.png" Part(47, 126, 32, 32) Smooth;
                TextureCheckedDisabled = None;
                TextureCheckedFocused = "themes/Black.png" Part(81, 126, 32, 32) Smooth;
                TextureCheckedHover = "themes/Black.png" Part(0, 178, 32, 32) Smooth;
                TextureUnchecked = "themes/Black.png" Part(34, 178, 32, 32) Smooth;
                TextureUncheckedDisabled = None;
                TextureUncheckedFocused = "themes/Black.png" Part(68, 178, 32, 32) Smooth;
                TextureUncheckedHover = "themes/Black.png" Part(0, 212, 32, 32) Smooth;
            }
        }
    }
}

ChildWindow.viewport {
    Position = (220, 0);
    PositionLocked = true;
    Size = (1110, 660);
    Title = Viewport;
    TitleAlignment = Center;
    TitleButtons = None;
    TitleTextSize = 13;

    Renderer {
        BackgroundColor = rgb( 80, 80, 80);
        BorderColor = Black;
        Borders = (1, 1, 1, 1);
        DistanceToSide = 5;
        PaddingBetweenButtons = 2;
        ShowTextOnTitleButtons = false;
        TextureBackground = None;
        TextureTitleBar = "themes/Black.png" Part(0, 580, 75, 25) Middle(25, 0) Smooth;
        TitleBarHeight = 25;
        TitleColor = rgb(190, 190, 190);

        MaximizeButton {
            Texture = "themes/Black.png" Part(0, 330, 15, 15) Smooth;
            TextureDown = "themes/Black.png" Part(17, 330, 15, 15) Smooth;
            TextureHover = "themes/Black.png" Part(34, 330, 15, 15) Smooth;
        }

        MinimizeButton {
            Texture = "themes/Black.png" Part(81, 330, 15, 15) Smooth;
            TextureDown = "themes/Black.png" Part(98, 330, 15, 15) Smooth;
            TextureHover = "themes/Black.png" Part(0, 347, 15, 15) Smooth;
        }

        CloseButton {
            Texture = "themes/Black.png" Part(34, 212, 15, 15) Smooth;
            TextureDown = "themes/Black.png" Part(51, 212, 15, 15) Smooth;
            TextureHover = "themes/Black.png" Part(68, 212, 15, 15) Smooth;
        }
    }

    Label.mode {
        Position = (4, 96.05%);
        Size = (808.2, 26.0827);
        Text = "Mode: None";
        TextSize = 13;
        VerticalAlignment = Center;

        Renderer {
            TextColor = rgb(190, 190, 190);
            TextOutlineColor = black;
            TextOutlineThickness = 0.3;
            TextureBackground = None;

            Scrollbar {
                TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
            }
        }
    }
}

ChildWindow.messagesWindow {
    Position = (220, 660);
    PositionLocked = true;
    Renderer = &4;
    Size = (1110, 240);
    Title = Messages;
    TitleAlignment = Center;
    TitleButtons = None;
    TitleTextSize = 13;

    ChatBox.messages {
        LinesStartFromTop = false;
        NewLinesBelowOthers = true;
        Size = (100%, 214);
        TextColor = black;
        TextSize = 13;

        Renderer {
            Padding = (3, 3, 3, 3);
            TextureBackground = "themes/Black.png" Part(0, 22, 48, 48) Middle(16) Smooth;

            Scrollbar {
                TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
            }
        }
    }
}

ChildWindow.codeEditor {
    Enabled = false;
    Position = (220, 0);
    PositionLocked = true;
    Size = (1110, 662.381);
    Title = Code;
    TitleAlignment = Center;
    TitleButtons = None;
    TitleTextSize = 13;
    Visible = false;

    Renderer {
        BackgroundColor = #242424;
        BorderColor = Black;
        Borders = (1, 1, 1, 1);
        DistanceToSide = 5;
        PaddingBetweenButtons = 2;
        ShowTextOnTitleButtons = false;
        TextureBackground = None;
        TextureTitleBar = "themes/Black.png" Part(0, 580, 75, 25) Middle(25, 0) Smooth;
        TitleColor = rgb(190, 190, 190);

        MaximizeButton {
            Texture = "themes/Black.png" Part(0, 330, 15, 15) Smooth;
            TextureDown = "themes/Black.png" Part(17, 330, 15, 15) Smooth;
            TextureHover = "themes/Black.png" Part(34, 330, 15, 15) Smooth;
        }

        MinimizeButton {
            Texture = "themes/Black.png" Part(81, 330, 15, 15) Smooth;
            TextureDown = "themes/Black.png" Part(98, 330, 15, 15) Smooth;
            TextureHover = "themes/Black.png" Part(0, 347, 15, 15) Smooth;
        }

        CloseButton {
            Texture = "themes/Black.png" Part(34, 212, 15, 15) Smooth;
            TextureDown = "themes/Black.png" Part(51, 212, 15, 15) Smooth;
            TextureHover = "themes/Black.png" Part(68, 212, 15, 15) Smooth;
        }
    }

    TextArea.code {
        HorizontalScrollbarPolicy = Never;
        MaximumCharacters = 0;
        Size = (100%, 94.66%);
        Text = "";
        TextSize = 13;

        Renderer {
            CaretColor = rgb(110, 110, 255);
            Font = "themes/SourceCodePro-Regular.ttf";
            Padding = (3, 3, 3, 3);
            SelectedTextBackgroundColor = rgb( 10, 110, 255);
            SelectedTextColor = White;
            TextColor = rgb(190, 190, 190);
            TextureBackground = "themes/Black.png" Part(0, 22, 48, 48) Middle(16) Smooth;

            Scrollbar {
                TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
            }
        }
    }

    Tabs.fileTabs {
        AutoSize = 0;
        Position = (0, 94.43%);
        Size = (100%, 5.19%);
        TextSize = 13;

        Renderer {
            DistanceToSide = 8;
            SelectedTextColor = White;
            TextColor = rgb(190, 190, 190);
            TextureDisabledTab = None;
            TextureSelectedTab = "themes/Black.png" Part(62, 546, 60, 32) Middle(16, 0) Smooth;
            TextureSelectedTabHover = None;
            TextureTab = "themes/Black.png" Part(0, 546, 60, 32) Middle(16, 0) Smooth;
            TextureTabHover = None;
        }
    }
}
